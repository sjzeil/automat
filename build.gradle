buildscript {
	repositories {
        gradlePluginPortal()
        mavenCentral()
    }

    dependencies {
        classpath "com.github.fracpete:rsync4j-all:3.1.2-15"
    }
}

plugins {
    id "com.github.node-gradle.node" version "3.1.0"
}

defaultTasks 'clean', 'build'

node {
    version="16.1.0"
}


task buildReactApp(type: NpxTask, dependsOn: 'npmInstall') {
    command = 'webpack'
    args = [
            '--config', './webpack.dev.js'
    ]
}

task buildReactAppProduction(type: NpxTask, dependsOn: 'npmInstall') {
    command = 'webpack'
    args = [
            '--config', './webpack.prod.js'
    ]
}

task copyResources (type: Copy) {
	from 'src/editor/resources'
	into './build/dist'
}

task copyDistForTest (type: Copy, dependsOn: ['buildReactApp', 'copyResources']) {
	from './build/dist'
	into './build/test'
}

task copyTestResources (type: Copy) {
	from 'test/resources'
	into './build/test'
}


task setupTest {
	description "set up test environment in build/test"
	group = "test"
	dependsOn =['copyTestResources', 'copyDistForTest']
	doLast {
		new ProcessBuilder('perl',  'automat.cgi',  'action=editor',  'problem=testProblem') .
		directory(new File('build/test')) .
		redirectOutput(new File('build/test/editTestProblem.html')) .
		start()

		new ProcessBuilder('perl',  'automat.cgi',  'action=editor',  'problem=selfAssessProblem') .
		directory(new File('build/test')) .
		redirectOutput(new File('build/test/editSAProblem.html')) .
		start()
	}
}

import com.github.fracpete.rsync4j.RSync;
import com.github.fracpete.processoutput4j.output.ConsoleOutputProcessOutput;

task deployForTest (dependsOn: 'setupTest') {
	doLast {
        def sourceDir = "build/test/";
        def destURL = "zeil@linux.cs.odu.edu:/home/zeil/secure_html/automatTest/";
        RSync rsync = new RSync()
                .source(sourceDir)
                .destination(destURL)
                .recursive(true)
                .archive(true)
                .delete(true)
                .verbose(true)
                .rsh("ssh -o IdentitiesOnly=yes -i /home/zeil/.ssh/homepc");
        ConsoleOutputProcessOutput output =
                new ConsoleOutputProcessOutput();
        output.monitor(rsync.builder());
    }
}

task build {
	 description = 'Build the development bundle'
	 group = build
	 dependsOn = ['buildReactApp', 'copyResources', 'setupTest']
}

task production	 {
	 description = 'Build the production bundle'
	 group = build
	 dependsOn = ['buildReactAppProduction', 'copyResources']
}

task cleanTests (type: Delete) {
	delete './build/test'
	followSymlinks = false
}

task clean (type: Delete, dependsOn: 'cleanTests') {
	delete './build/dist'
	followSymlinks = false
}

task cleaner (type: Delete, dependsOn: 'clean') {
	delete 'node_modules'
	followSymlinks = false
}

